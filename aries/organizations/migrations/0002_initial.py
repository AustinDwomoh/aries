# Generated by Django 5.1.4 on 2025-09-20 02:33

import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("organizations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "tag",
                    models.CharField(
                        help_text="Organization tag must be unique and up to 10 characters long.",
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=128)),
                ("description", models.TextField()),
                (
                    "logo",
                    models.ImageField(
                        default="areis-1.png", upload_to="organization_logos"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        default="areis-2.jpg", upload_to="organization_profiles"
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "primary_game",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "other_games",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("esports_company", "Esports Company"),
                            ("tournament_organizer", "Tournament Organizer"),
                            ("gaming_community", "Gaming Community"),
                            ("event_company", "Event Company"),
                            ("sponsor", "Sponsor"),
                            ("media_company", "Media Company"),
                        ],
                        default="tournament_organizer",
                        max_length=20,
                    ),
                ),
                ("can_host_tournaments", models.BooleanField(default=True)),
                ("can_sponsor_events", models.BooleanField(default=False)),
                ("can_manage_prizes", models.BooleanField(default=True)),
                ("can_verify_teams", models.BooleanField(default=False)),
                (
                    "business_license",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("tax_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("established_date", models.DateField(blank=True, null=True)),
                (
                    "total_prize_money_distributed",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("total_tournaments_hosted", models.PositiveIntegerField(default=0)),
                ("average_tournament_size", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this organization belongs to.",
                        related_name="organization_set",
                        related_query_name="organization",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this organization.",
                        related_name="organization_permissions_set",
                        related_query_name="organization",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
            },
        ),
        migrations.CreateModel(
            name="OrganizationReputation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reputation_score", models.FloatField(default=0.0)),
                ("total_events_organized", models.PositiveIntegerField(default=0)),
                ("total_participants_reached", models.PositiveIntegerField(default=0)),
                ("average_event_rating", models.FloatField(default=0.0)),
                (
                    "total_prize_money_distributed",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "total_revenue_generated",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("on_time_completion_rate", models.FloatField(default=100.0)),
                ("participant_satisfaction", models.FloatField(default=0.0)),
                ("dispute_resolution_rate", models.FloatField(default=100.0)),
                ("achievements", models.JSONField(blank=True, default=list, null=True)),
                ("badges", models.JSONField(blank=True, default=list, null=True)),
                ("is_verified_organizer", models.BooleanField(default=False)),
                (
                    "verification_level",
                    models.CharField(
                        choices=[
                            ("basic", "Basic"),
                            ("verified", "Verified"),
                            ("premium", "Premium"),
                            ("elite", "Elite"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputation",
                        to="organizations.organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrganizationJoinRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField(blank=True, null=True)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Join Request",
                "verbose_name_plural": "Organization Join Requests",
                "unique_together": {("user", "organization")},
            },
        ),
        migrations.CreateModel(
            name="OrganizationMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("captain", "Captain"),
                            ("member", "Member"),
                            ("recruit", "Recruit"),
                        ],
                        default="member",
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="organizations.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Member",
                "verbose_name_plural": "Organization Members",
                "unique_together": {("organization", "user")},
            },
        ),
        migrations.CreateModel(
            name="OrganizationSocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("discord", "Discord"),
                            ("whatsapp", "WhatsApp"),
                            ("x", "X / Twitter"),
                            ("instagram", "Instagram"),
                            ("tiktok", "TikTok"),
                            ("youtube", "YouTube"),
                            ("twitch", "Twitch"),
                            ("website", "Website"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField(max_length=500)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Social Link",
                "verbose_name_plural": "Organization Social Links",
                "unique_together": {("organization", "link_type")},
            },
        ),
    ]
