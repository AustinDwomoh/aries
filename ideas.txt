[+] Created user: gmadden
[+] Created user: lriley
[+] Created user: jasmine95
[+] Created user: annaarellano
[+] Created user: shanewhite
[+] Created clan: Clan_umorrow | Password: y3c6XY4w_c
[+] Created clan: Clan_cassidy97 | Password: !j7d$LUM3%
[+] Created clan: Clan_lindsaybender | Password: Bm0WJWRs@l
[+] Created clan: Clan_jon03 | Password: p9PQq@TT^j
[+] Created user: mikedavis
[+] Created user: leejohn
[+] Created user: taylor30
[+] Created user: johntorres
[+] Created user: hdavidson
[+] Created clan: Clan_scott91 | Password: *AIbGcS!3T
[+] Created clan: Clan_jeremy97 | Password: l8$YqM6%@)
[+] Created clan: Clan_prattmike | Password: !1mpQ#$++f
[+] Created clan: Clan_hunter53 | Password: _U70NOb*9S
rgb(186,199,190)
#bac7be

#959f98
rgb(149,159,152)

class IndiTournamentInvite(models.Model):
    tournament = models.ForeignKey(
        IndiTournament,
        on_delete=models.CASCADE,
        related_name="invites"
    )
    player = models.ForeignKey(
        User,
        on_delete=models.CASCADE,
        related_name="player_invites"
    )
    invited_by = models.ForeignKey(
        User,
        on_delete=models.SET_NULL,
        null=True,
        related_name="sent_invites"
    )
    STATUS_CHOICES = [
        ("pending", "Pending"),
        ("accepted", "Accepted"),
        ("declined", "Declined"),
        ("expired", "Expired"),
    ]
    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default="pending")
    invited_at = models.DateTimeField(auto_now_add=True)
    expires_at = models.DateTimeField(default=lambda: timezone.now() + timedelta(days=3))  # <-- 3 days timeout
    @property
    def is_expired(self):
        return self.status == "pending" and timezone.now() > self.expires_at


""" <div style="font-family: Arial, sans-serif; background:#f4f4f4; padding:20px;">
  <div style="max-width:600px; margin:auto; background:white; padding:25px; border-radius:10px;">
    <h2>You are invited to {{ tournament.name }}</h2>
    <p>Hello {{ clan_name }},</p>
    <p>{{ invited_by }} has invited your clan to participate in the tournament <strong>{{ tournament.name }}</strong>.</p>
    <p>Please respond by clicking one of the buttons below:</p>
    <a href="{{ accept_link }}" style="padding:10px 20px; background:#28a745; color:white; text-decoration:none; border-radius:5px;">Accept</a>
    <a href="{{ decline_link }}" style="padding:10px 20px; background:#dc3545; color:white; text-decoration:none; border-radius:5px; margin-left:10px;">Decline</a>
    <p style="color:#999; font-size:12px; margin-top:20px;">This is an automated invitation from Aries.</p>
  </div>
</div>
 """

 
class ClanTournamentInvite(models.Model):
    tournament = models.ForeignKey(ClanTournament, on_delete=models.CASCADE, related_name="invites")
    clan = models.ForeignKey(Clans, on_delete=models.CASCADE)
    STATUS_CHOICES = [
        ("pending", "Pending"),
        ("accepted", "Accepted"),
        ("declined", "Declined"),
        ("expired", "Expired"),
    ]
    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default="pending")
    invited_by = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)
    invited_at = models.DateTimeField(auto_now_add=True)
    expires_at = models.DateTimeField(default=lambda: timezone.now() + timedelta(days=3))  # <-- 3 days timeout

    @property
    def is_expired(self):
        return self.status == "pending" and timezone.now() > self.expires_at
